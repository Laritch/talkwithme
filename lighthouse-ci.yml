name: Lighthouse CI
on:
  pull_request:
    branches: [main, master]
    types: [opened, synchronize, reopened]

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Start server in background
        run: npm run start & npx wait-on http://localhost:3000

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000/
            http://localhost:3000/api-docs
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './lighthouse-budget.json'

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v6
        with:
          script: |
            const results = ${{ toJSON(steps.lighthouse.outputs) }}
            const links = Object.values(results).filter(r => r?.links?.html)
              .map(r => r.links.html).join('\n');
            const scores = Object.values(results).filter(r => r?.summary?.performance)
              .map(r => {
                return `
                URL: ${r.url}
                Performance: ${Math.round(r.summary.performance * 100)}
                Accessibility: ${Math.round(r.summary.accessibility * 100)}
                Best Practices: ${Math.round(r.summary.best-practices * 100)}
                SEO: ${Math.round(r.summary.seo * 100)}
                PWA: ${Math.round(r.summary.pwa * 100)}
                `;
              }).join('\n');

            core.setOutput('links', links);
            core.setOutput('scores', scores);

      - name: Add comment to PR
        uses: actions/github-script@v6
        with:
          script: |
            const pr_number = context.issue.number;
            const scores = `${{ steps.format_lighthouse_score.outputs.scores }}`;
            const links = `${{ steps.format_lighthouse_score.outputs.links }}`;

            const comment = `## ðŸš¦ Lighthouse Performance Results\n
            ${scores}\n
            [See all details here](${links})
            `;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: comment
            });
